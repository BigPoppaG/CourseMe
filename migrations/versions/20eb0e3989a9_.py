"""empty message

Revision ID: 20eb0e3989a9
Revises: None
Create Date: 2015-04-07 18:45:00.698000

"""

# revision identifiers, used by Alembic.
revision = '20eb0e3989a9'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('administrator_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('blurb', sa.String(length=400), nullable=True),
    sa.Column('view_institution_only_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['administrator_id'], [u'user.id'], name='fk_institution_creator_id', use_alter=True),
    sa.ForeignKeyConstraint(['view_institution_only_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_name'), 'institution', ['name'], unique=True)
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], [u'user.id'], name='fk_group_creator_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], [u'subject.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('forename', sa.String(length=64), nullable=True),
    sa.Column('surname', sa.String(length=64), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('blurb', sa.String(length=256), nullable=True),
    sa.Column('role', sa.SmallInteger(), nullable=False),
    sa.Column('time_registered', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('enterprise_licence', sa.DateTime(), nullable=True),
    sa.Column('time_deleted', sa.DateTime(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('view_institution_only_id', sa.Integer(), nullable=True),
    sa.Column('institution_student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_student_id'], ['institution.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.ForeignKeyConstraint(['view_institution_only_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('objective',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('approved', sa.DateTime(), nullable=True),
    sa.Column('assessable', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], [u'subject.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], [u'topic.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=5000), nullable=True),
    sa.Column('answer', sa.String(length=5000), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('submitted', sa.DateTime(), nullable=True),
    sa.Column('published', sa.DateTime(), nullable=True),
    sa.Column('locked', sa.DateTime(), nullable=True),
    sa.Column('extension', sa.Boolean(), nullable=True),
    sa.Column('visually_impaired', sa.Boolean(), nullable=True),
    sa.Column('votes', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], [u'subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scheme_of_work',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], [u'user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institution_members',
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('member_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['user.id'], )
    )
    op.create_table('group_members',
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('member_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['user.id'], )
    )
    op.create_table('module',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('description', sa.String(length=400), nullable=True),
    sa.Column('notes', sa.String(length=400), nullable=True),
    sa.Column('material_type', sa.String(length=120), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('material_source', sa.String(length=120), nullable=True),
    sa.Column('material_path', sa.String(length=400), nullable=True),
    sa.Column('submitted', sa.DateTime(), nullable=True),
    sa.Column('published', sa.DateTime(), nullable=True),
    sa.Column('locked', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.DateTime(), nullable=True),
    sa.Column('live', sa.Boolean(), nullable=True),
    sa.Column('subtitles', sa.Boolean(), nullable=True),
    sa.Column('easy_language', sa.Boolean(), nullable=True),
    sa.Column('extension', sa.Boolean(), nullable=True),
    sa.Column('for_teachers', sa.Boolean(), nullable=True),
    sa.Column('visually_impaired', sa.Boolean(), nullable=True),
    sa.Column('votes', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_tutor',
    sa.Column('tutor_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tutor_id'], ['user.id'], )
    )
    op.create_table('institution_approved_questions',
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], )
    )
    op.create_table('question_selections',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('institution_approved_modules',
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], )
    )
    op.create_table('question_objectives',
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('objective_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['objective_id'], ['objective.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], )
    )
    op.create_table('user_objective',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('assessor_id', sa.Integer(), nullable=True),
    sa.Column('objective_id', sa.Integer(), nullable=True),
    sa.Column('completed', sa.SmallInteger(), nullable=True),
    sa.ForeignKeyConstraint(['assessor_id'], [u'user.id'], ),
    sa.ForeignKeyConstraint(['objective_id'], [u'objective.id'], ),
    sa.ForeignKeyConstraint(['user_id'], [u'user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('objective_heirarchy',
    sa.Column('prerequisite_id', sa.Integer(), nullable=True),
    sa.Column('followon_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followon_id'], ['objective.id'], ),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['objective.id'], )
    )
    op.create_table('module_objectives',
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('objective_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.ForeignKeyConstraint(['objective_id'], ['objective.id'], )
    )
    op.create_table('scheme_objectives',
    sa.Column('scheme_id', sa.Integer(), nullable=True),
    sa.Column('objective_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['objective_id'], ['objective.id'], ),
    sa.ForeignKeyConstraint(['scheme_id'], ['scheme_of_work.id'], )
    )
    op.create_table('course_modules',
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['module.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], )
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_id', sa.Integer(), nullable=True),
    sa.Column('to_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.Text(), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('sent', sa.DateTime(), nullable=True),
    sa.Column('read', sa.DateTime(), nullable=True),
    sa.Column('reported', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.DateTime(), nullable=True),
    sa.Column('request_access', sa.Boolean(), nullable=True),
    sa.Column('recommended_material_id', sa.Integer(), nullable=True),
    sa.Column('assign_objective_id', sa.Integer(), nullable=True),
    sa.Column('assign_scheme_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assign_objective_id'], [u'objective.id'], ),
    sa.ForeignKeyConstraint(['assign_scheme_id'], [u'scheme_of_work.id'], ),
    sa.ForeignKeyConstraint(['from_id'], [u'user.id'], ),
    sa.ForeignKeyConstraint(['recommended_material_id'], [u'module.id'], ),
    sa.ForeignKeyConstraint(['to_id'], [u'user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_module',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('first_viewed', sa.DateTime(), nullable=True),
    sa.Column('last_viewed', sa.DateTime(), nullable=True),
    sa.Column('starred', sa.Boolean(), nullable=True),
    sa.Column('vote', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('enrolled', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], [u'module.id'], ),
    sa.ForeignKeyConstraint(['user_id'], [u'user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_module')
    op.drop_table('message')
    op.drop_table('course_modules')
    op.drop_table('scheme_objectives')
    op.drop_table('module_objectives')
    op.drop_table('objective_heirarchy')
    op.drop_table('user_objective')
    op.drop_table('question_objectives')
    op.drop_table('institution_approved_modules')
    op.drop_table('question_selections')
    op.drop_table('institution_approved_questions')
    op.drop_table('student_tutor')
    op.drop_table('module')
    op.drop_table('group_members')
    op.drop_table('institution_members')
    op.drop_table('scheme_of_work')
    op.drop_table('question')
    op.drop_table('objective')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('topic')
    op.drop_table('group')
    op.drop_index(op.f('ix_institution_name'), table_name='institution')
    op.drop_table('institution')
    op.drop_table('subject')
    ### end Alembic commands ###
